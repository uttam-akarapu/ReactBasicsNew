{"version":3,"sources":["Components/CSSModules/Car/Car.module.css","Components/CSSModules/Persons/Persons.module.css","Components/CSSModules/Car/Car.js","Components/CSSModules/Persons/Persons.js","Components/ReactLifecycleHooks/ReactLifecycleHooks.js","Components/Forms/UserRegistration/UserRegistration.js","Components/FragmentDemo/FragmentDemo.js","Components/PureComp/RegComp.js","Components/PureComp/PureComp.js","Components/Memo/MemoEx.js","Components/PureComp/ParentComp.js","Components/Refs/RefsDemo.js","Components/ErrorDemo/Hero.js","Components/ErrorDemo/ErrorBoundary.js","Components/HOCDemo/commonCounter.js","Components/HOCDemo/ClickCounter.js","Components/HOCDemo/HoverCounter.js","Components/RenderPropsDemo/ClickCounter2.js","Components/RenderPropsDemo/HoverCounter2.js","Components/RenderPropsDemo/User.js","Components/RenderPropsDemo/CounterComponent.js","Components/ContextDemo/UserContext.js","Components/ContextDemo/UserC.js","Components/HTTPDemo/GetList.js","Components/HTTPDemo/PostFormList.js","Components/HooksDemo/ClassCounter.js","Components/HooksDemo/HookCounter.js","Components/HooksDemo/HookCounterThree.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Car","className","CarStyles","blue","Persons","props","PersonStyles","red","age","ReactLifecycleHooks","console","log","nextProps","nextState","prevProps","prevState","Component","UserRegistration","firstnameChangeHandler","event","target","value","setState","person","firstname","lastnameChangeHandler","lastname","submitHandler","alert","state","preventDefault","cart","address","mobile","email","isTrueDetails","userdetails","onSubmit","this","type","onChange","FragmentDemo","RegComp","name","PureComp","PureComponent","React","memo","ParentComp","RefsDemo","clickRefHandlerVal","inputRefs","current","createRef","focus","ref","onClick","Hero","Error","ErrorBoundary","hasError","error","info","children","commonCounter","WrappedComponent","incrementNumber","incrementcountHandler","count","incrementCount","onMouseOver","ClickCounter2","incementClickHandler","HoverCounter2","User","CounterComponent","render","UserContext","createContext","UserProvider","Provider","UserConsumer","Consumer","UserC","GetList","posts","errorMsg","axios","get","then","res","data","catch","length","map","post","index","key","id","title","PostFormList","changeHandler","response","userID","body","ClassCounter","incrementCountHandler","prevstate","counter","HookCounter","useState","setCount","HookCounterThree","setName","e","JSON","stringify","App","isLoggedIn","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e7e3cc18.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"Car_blue__WLbjA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"red\":\"Persons_red__1ewfj\"};","import React from 'react';\r\nimport CarStyles from \"./Car.module.css\"\r\n\r\nconst Car = () => {\r\n    return (\r\n        <div>\r\n            <h1>Car Component</h1>\r\n            <button className={CarStyles.blue}>Hover to change color</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Car;","import React from 'react';\r\nimport PersonStyles from \"./Persons.module.css\";\r\nimport PropTypes, { number } from 'prop-types';\r\n\r\nconst Persons = (props) => {\r\n    return (\r\n        <div>\r\n            <h1>Persons Component</h1>\r\n            <button className={PersonStyles.red}>Hover to change color</button>\r\n            <b> Age is : {props.age} -- PropTypes example: used to specify datatype to the variables.</b>\r\n\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nPersons.propTypes = {\r\n    age:PropTypes.number\r\n};\r\n\r\nexport default Persons;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ReactLifecycleHooks extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(\"In constructor\");\r\n\r\n    }\r\n\r\n    componentWillMount() {\r\n        console.log(\"componentWIllMount\");\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"componentDidMount\");\r\n\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(\"componentWillReceiveProps \" + nextProps);\r\n\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        console.log(\"shouldComponentUpdate\");\r\n\r\n    }\r\n\r\n    componentWillUpdate(nextProps, nextState) {\r\n        console.log(\"componentWillUpdate\");\r\n\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        console.log(\"componentDidUpdate\");\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"componentWillUnmount\");\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log(\"render\")\r\n        return (\r\n            <div>\r\n                <h1>React Lifecycle hooks </h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactLifecycleHooks.propTypes = {\r\n\r\n};\r\n\r\nexport default ReactLifecycleHooks;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass UserRegistration extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            cart: [],\r\n            person: {      \r\n            firstname:\"\",\r\n            lastname :\"\",\r\n            address : \"\",\r\n            mobile :\"\",\r\n            email :\"\",\r\n            isTrueDetails : true\r\n        }\r\n        \r\n        }\r\n\r\n        \r\n\r\n     \r\n    }\r\n\r\n    firstnameChangeHandler = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            person:[{ firstname:event.target.value}]\r\n           \r\n        })\r\n        \r\n    }\r\n    lastnameChangeHandler = (event) => {\r\n        console.log(event.target.value);\r\n        this.setState({\r\n            person:[{ lastname:event.target.value}]\r\n           \r\n        })\r\n        \r\n    }\r\n\r\n    submitHandler = (event) =>{\r\n\r\n        alert(\"firstname\"+this.state.person.firstname + \"lastname\" +this.state.person.lastname);\r\n        event.preventDefault();\r\n        \r\n\r\n    }\r\n\r\n    \r\n    render() {\r\n\r\n        \r\n     \r\nconst userdetails =  \r\n                <div>\r\n                    <form onSubmit = {this.submitHandler}>\r\n                        <div>\r\n                            <label>First Name :</label>\r\n                        <input type=\"text\" value={this.state.person.firstname} onChange={this.firstnameChangeHandler}/>\r\n                        <p>{this.state.person.firstname}</p>\r\n                        </div>\r\n                        <div>\r\n                            <label>Last Name :</label>\r\n                        <input type=\"text\" value={this.state.person.lastname} onChange={this.lastnameChangeHandler}/>\r\n                        <p>{this.state.person.lastname}</p>\r\n                        </div>\r\n                        <input type=\"submit\"/>\r\n                    </form>\r\n                </div>\r\n                \r\n\r\n\r\n        \r\n        return (\r\n            <div>\r\n                \r\n                {userdetails}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserRegistration.propTypes = {\r\n\r\n};\r\n\r\nexport default UserRegistration;","import React , {Fragment} from 'react';\r\n\r\nconst FragmentDemo = () => {\r\n    return (\r\n        /* Frgment is used to wrap multiple jsx elements without a parent node*/ \r\n        <Fragment>\r\n            <hr/>\r\n             <h2> Fragment Demo </h2>\r\n             <p> This section doesnt have an enclosing div , since we have enclosed the jsx with \"Fragment\" </p>\r\n             <p><b>Fragment:</b> Lets you group list of children elements without adding extra element to the DOM</p>\r\n        </Fragment>\r\n    );\r\n};\r\n\r\nexport default FragmentDemo;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass RegComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        console.log(\"Regular component\");\r\n        return (\r\n            <div>\r\n                    <span>Regular Class Component</span> Name is : {this.props.name}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRegComp.propTypes = {\r\n\r\n};\r\n\r\nexport default RegComp;","import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass PureComp extends PureComponent {\r\n    render() {\r\n        console.log(\"Pure component\");\r\n        return (\r\n            <div>\r\n               \r\n                 <span> Pure Component </span> Name is : {this.props.name}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPureComp.propTypes = {\r\n\r\n};\r\n\r\nexport default PureComp;","import React from 'react';\r\n\r\nconst MemoEx = (props) => {\r\n    console.log(\"Memo Component\");\r\n    return (\r\n        <div>\r\n            {props.name}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default  React.memo(MemoEx);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RegComp from \"../PureComp/RegComp\";\r\nimport PureComp from \"../PureComp/PureComp\";\r\nimport MemoEx from \"../Memo/MemoEx\";\r\n\r\nclass ParentComp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            name:\"Uttam\"\r\n        }\r\n\r\n    }\r\n\r\n    \r\n    componentDidMount() {\r\n\r\n        \r\n            this.setState({\r\n                name:\"Uttam\"\r\n            });\r\n       \r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        console.log(\"parent component\");\r\n        return (\r\n            <div>\r\n                 <hr/>\r\n                <h2>PureComponent : It prevents unnecessary re-rendering (Implements 'ShouldComponentUpdate' lifeCycle hook internally to check for changes) if there is no change in the components , Below is the example</h2>\r\n                <p>Open the console and refresh the page , you see pure component rendering only once , while parent and Regular components keep rendering because of the setInterval method in parent component</p>\r\n                <h3>Parent Class Component</h3>\r\n                <RegComp \r\n                name={this.state.name}\r\n                />\r\n                <PureComp \r\n                name={this.state.name}\r\n               />\r\n                <hr/><h2>Memo Component : Implements Pure Component kind of functionality in functional components </h2>\r\n                <MemoEx name={this.state.name}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nParentComp.propTypes = {\r\n\r\n};\r\n\r\nexport default ParentComp;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass RefsDemo extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.inputRefs = React.createRef();\r\n\r\n    }\r\n\r\n  \r\n    componentDidMount() {\r\n        console.log(this.inputRefs);\r\n        this.inputRefs.current.focus();\r\n\r\n    }\r\n\r\n    clickRefHandlerVal = () =>{\r\n        alert(\"value is : \"+ this.inputRefs.current.value);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <hr/>\r\n                <h2> Refs : It focuses specific element using React.createRef object. </h2>\r\n                <p>You can see below, i have made it focus on 2nd input when the page loads ex: \"this.inputRefs.current.focus()\"</p>\r\n                <p> You can also use this feature to capture value ex: \"this.inputRefs.current.value\" . Type something in second input box and Click the button to see the value</p>\r\n               <p> <input type=\"text\" /></p>\r\n                <input type=\"text\" ref={this.inputRefs}/>\r\n                <button className=\"btn btn-default\" onClick={this.clickRefHandlerVal}>Click</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nRefsDemo.propTypes = {\r\n\r\n};\r\n\r\nexport default RefsDemo;","import React from 'react';\r\n\r\nconst Hero = (props) => {\r\n    if(props.name == \"Joker\"){\r\n        throw new Error(\"Not a Hero !\");\r\n    }\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <h3>Error Handling Demo : We acheive it using getDerivedStateFromError or componentDidCatch lifecycle hooks</h3>\r\n             {props.name} <span>   (Un-comment the Joker named component in App.js to see the error handling effect)</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Hero;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ErrorBoundary extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError : false\r\n        }\r\n\r\n    }\r\n\r\n    static getDerivedStateFromError (error){\r\n        return {\r\n            hasError:true\r\n        }\r\n\r\n    }\r\n\r\n   componentDidCatch(error,info){\r\n       console.log(\"Error is \"+error);\r\n       console.log(\"Info is \"+info);\r\n   }\r\n\r\n    render() {\r\n        if(this.state.hasError){\r\n            return <h2>Something went wrong in {this.props.error} component</h2>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nErrorBoundary.propTypes = {\r\n\r\n};\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\n\r\nconst commonCounter = (WrappedComponent,incrementNumber) =>{\r\n    class NewCounter extends Component{\r\n        constructor(props) {\r\n            super(props);\r\n    \r\n            this.state={\r\n                count:0\r\n            }\r\n    \r\n        }\r\n    \r\n        incrementcountHandler=()=>{\r\n            this.setState(prevState =>{\r\n               return{ count:prevState.count+incrementNumber}\r\n            })\r\n        }\r\n\r\n        render(){\r\n            return(\r\n                <WrappedComponent \r\n                count={this.state.count}\r\n                incrementCount = {this.incrementcountHandler}\r\n                {...this.props}\r\n                />\r\n\r\n            )\r\n\r\n        }\r\n    \r\n    }\r\n\r\n    return NewCounter;\r\n\r\n\r\n}\r\n\r\nexport default commonCounter;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport commonCounter from \"../HOCDemo/commonCounter\";\r\n\r\nclass ClickCounter extends Component {\r\n    \r\n    render() {\r\n        const {count , incrementCount} =this.props;\r\n\r\n        return (\r\n            <div>\r\n                <hr/>\r\n                <h2>HOC - Higher Order Components : <p>It is a pattern useful in sharing common functionality between components</p></h2>\r\n                <p>Syntax would look like this : const NewComponent = higherOrderComponent(originalComponent)</p>\r\n                <p>Ex: const IRON-MAN = withSuit(Tony Stark)</p>\r\n                <button onClick={incrementCount}> Clicked <b>{count}</b> times</button>\r\n                <p>{this.props.name} : this Value is passed here not directly from App.js , it goes to HOC and from there it comes here.We declare '...this.props' spread operator in wrappedComponent in HOC to take other props coming from App.js</p>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nClickCounter.propTypes = {\r\n\r\n};\r\n\r\nexport default commonCounter(ClickCounter,2);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport commonCounter from \"../HOCDemo/commonCounter\";\r\n\r\nclass HoverCounter extends Component {\r\n    \r\n    render() {\r\n        const {count , incrementCount} =this.props;\r\n        return (\r\n            <div>\r\n                <span onMouseOver={incrementCount}>Hover here to increment <b>{count}</b></span> \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHoverCounter.propTypes = {\r\n\r\n};\r\n\r\nexport default commonCounter(HoverCounter,5);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ClickCounter2 extends Component {\r\n    \r\n   \r\n\r\n    render() {\r\n        const {count,incementClickHandler} = this.props;\r\n        return (\r\n            <div>\r\n                <hr/>\r\n                <h2>Render Props Demo</h2>\r\n                <button onClick={incementClickHandler}>Clicked {count} times</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nClickCounter2.propTypes = {\r\n\r\n};\r\n\r\nexport default ClickCounter2;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass HoverCounter2 extends Component {\r\n      \r\n\r\n    render() {\r\n        const {count,incementClickHandler} = this.props;\r\n        return (\r\n            <div>\r\n                <p onMouseOver={incementClickHandler}> COUNT : <b>{count}</b>-- Hover over me to increment the count</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nHoverCounter2.propTypes = {\r\n\r\n};\r\n\r\nexport default HoverCounter2;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass User extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <hr/>\r\n                User.js file.\r\n\r\n                Name is {this.props.name(false)} -- Part of Render Props demo below.            \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUser.propTypes = {\r\n\r\n};\r\n\r\nexport default User;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CounterComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            count:0\r\n        }\r\n\r\n    }\r\n\r\n\r\n    incementClickHandler = () => {\r\n        this.setState(prevState => {\r\n            return {count:prevState.count+2}\r\n        })\r\n    }\r\n   \r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.render(this.state.count , this.incementClickHandler)}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCounterComponent.propTypes = {\r\n\r\n};\r\n\r\nexport default CounterComponent;","import React, { Component } from 'react';\r\n\r\nconst UserContext = React.createContext();\r\nconst UserProvider = UserContext.Provider;\r\nconst UserConsumer = UserContext.Consumer;\r\n\r\nexport {UserProvider,UserConsumer}\r\nexport default UserContext;\r\n\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { UserConsumer } from './UserContext';\r\n\r\nclass UserC extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <hr/>\r\n                <h2>Context Demo </h2>\r\n                <h4>UserC component</h4>\r\n                <UserConsumer>\r\n                    {\r\n                        (name) => {\r\n                            return (\r\n                                <div > \r\n                                    This value -- {name} -- is provided from the UserContext to Component UserC which is inside UserB which inturn resides in UserA\r\n                                    \r\n                                </div>\r\n                            )\r\n                        }\r\n\r\n                    }\r\n                </UserConsumer>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nUserC.propTypes = {\r\n\r\n};\r\n\r\nexport default UserC;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from \"axios\";\r\n\r\nclass GetList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            posts:[],\r\n            errorMsg:''\r\n        }\r\n\r\n    }\r\n\r\n\r\n   \r\n\r\n    componentDidMount() {\r\n\r\n        axios.get(\"https://jsonplaceholder.typicode.com/posts\")\r\n        .then(res => {\r\n            console.log(res);\r\n            this.setState({\r\n                posts:res.data\r\n            })\r\n        })\r\n        .catch(error =>{\r\n            console.log(error);\r\n            this.setState({\r\n                errorMsg:\"Error Retrieving Data , Please check your GET url once !\"\r\n            })\r\n        })\r\n\r\n       \r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        const {posts,errorMsg} = this.state;\r\n        console.log(\"this.state.posts.length \"+posts.length);\r\n\r\n        return (\r\n            <div>\r\n                <hr/>\r\n                <h2>Http Request Demo</h2>\r\n                <h4> List of posts</h4>\r\n                <table className=\"table\">\r\n                {posts.length ?\r\n               \r\n                    posts.map((post,index) => {\r\n                        return( \r\n                                <tr key={index}>\r\n                                    <td>{post.id}</td><td> {post.title}</td>\r\n                                </tr>\r\n                           \r\n                        )\r\n\r\n                    }):null\r\n                \r\n                }\r\n\r\n                {errorMsg ? <td>{errorMsg}</td>:null}\r\n                 </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nGetList.propTypes = {\r\n\r\n};\r\n\r\nexport default GetList;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport axios from \"axios\";\r\n\r\nclass PostFormList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            userID:'',\r\n            title:'',\r\n            body:''\r\n        }\r\n\r\n    }\r\n\r\n    \r\n\r\n    componentDidMount() {\r\n       \r\n\r\n    }\r\n\r\n    changeHandler = (event) => {\r\n\r\n        this.setState({\r\n            [event.target.name]:event.target.value\r\n           \r\n        })\r\n    }\r\n\r\n    submitHandler =(event) =>{\r\n        event.preventDefault();\r\n        console.log(this.state);\r\n        axios.post(\"https://jsonplaceholder.typicode.com/posts\",this.state)\r\n        .then(response =>{\r\n            console.log(response);\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n        })\r\n       \r\n    }\r\n    \r\n\r\n    render() {\r\n        const {userID,title,body} = this.state;\r\n        return (\r\n            <div>\r\n                <hr/>\r\n                <h4>POST form submission </h4>\r\n                <form onSubmit={this.submitHandler}>\r\n                    <div>\r\n                       User ID : <input type=\"text\" name=\"userID\" value={userID} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                        Title : <input type=\"text\" name=\"title\" value={title} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <div>\r\n                       Body : <input type=\"text\" name=\"body\" value={body} onChange={this.changeHandler}/>\r\n                    </div>\r\n                    <button className=\"btn btn-primary\">SUBMIT</button>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nPostFormList.propTypes = {\r\n    \r\n};\r\n\r\nexport default PostFormList;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass ClassCounter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            counter:0\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    incrementCountHandler =()=>{\r\n        this.setState(prevstate => {\r\n            return { counter:prevstate.counter+1}\r\n           \r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {counter} = this.state;\r\n        return (\r\n            <div>\r\n                <hr/>\r\n\r\n                <h2>React Hooks Example </h2>\r\n                <p> Below button functionality is implemented through class</p>\r\n                <button onClick={this.incrementCountHandler}>{counter} </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nClassCounter.propTypes = {\r\n\r\n};\r\n\r\nexport default ClassCounter;","import React,{useState} from 'react';\r\n\r\nconst HookCounter = () => {\r\n\r\nconst [count , setCount]= useState(2);\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <p> the below value on the button is coming from the <b>useState</b> HOOK functionality in HookCounter.js file</p>\r\n            <button onClick={() => setCount(count+1)}>Count {count}</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HookCounter;","import React , {useState} from 'react';\r\n\r\nconst HookCounterThree = () => {\r\n\r\n    const [name ,setName] = useState({firstname:'',lastname:''})\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            <p>useState example 2</p>\r\n            <form>\r\n            First Name :<input type=\"text\" value={name.firstname} onChange = {(e)=>setName({...name,firstname:e.target.value})}/>\r\n            Last Name :<input type=\"text\"  value={name.lastname} onChange = {(e)=>setName({...name,lastname:e.target.value})}/>\r\n            <h3>{name.firstname}-{name.lastname} </h3>\r\n            <h2>{JSON.stringify(name)}</h2>\r\n            </form>\r\n            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default HookCounterThree;","import Car from \"../CSSModules/Car/Car\";\nimport Persons from \"../CSSModules/Persons/Persons\";\nimport ReactLifecycleHooks from '../ReactLifecycleHooks/ReactLifecycleHooks';\nimport UserRegistration from \"../Forms/UserRegistration/UserRegistration\";\nimport FragmentDemo from \"../FragmentDemo/FragmentDemo\";\nimport ParentComp from \"../PureComp/ParentComp\";\nimport RefsDemo from \"../Refs/RefsDemo\";\nimport Hero from \"../ErrorDemo/Hero\";\nimport ErrorBoundary from \"../ErrorDemo/ErrorBoundary\";\nimport ClickCounter from \"../HOCDemo/ClickCounter\";\nimport HoverCounter from \"../HOCDemo/HoverCounter\";\nimport ClickCounter2 from \"../RenderPropsDemo/ClickCounter2\";\nimport HoverCounter2 from \"../RenderPropsDemo/HoverCounter2\";\nimport User from \"../RenderPropsDemo/User\";\nimport CounterComponent from \"../RenderPropsDemo/CounterComponent\";\nimport UserC from \"../ContextDemo/UserC\";\nimport GetList from \"../HTTPDemo/GetList\";\nimport PostFormList from \"../HTTPDemo/PostFormList\";\nimport ClassCounter from \"../HooksDemo/ClassCounter\";\nimport HookCounter from \"../HooksDemo/HookCounter\";\nimport HookCounterThree from \"../HooksDemo/HookCounterThree\";\n\n\nimport './App.css';\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { UserProvider } from \"../ContextDemo/UserContext\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      age:'10'\n    }\n\n  }\n\n  \n\n  render() {\n    return (\n      <div className=\"App\">\n      <h1>Hello</h1>\n      <Car/>\n      <Persons age={this.state.age}/>\n      <ReactLifecycleHooks/>\n      <UserRegistration/>\n      <FragmentDemo/>\n      <ParentComp/>\n      <RefsDemo/>\n      <ErrorBoundary>\n      <Hero name=\"Batman\" error=\"Batman\"/>\n      </ErrorBoundary>\n      <ErrorBoundary error=\"Spider-man\">\n      <Hero name=\"Spider-man\"/>\n      </ErrorBoundary>\n      {/*<ErrorBoundary error=\"Joker\">\n      <Hero name=\"Joker\"/>\n    </ErrorBoundary>*/}\n      <ClickCounter name=\"Uttam\"/>\n      <HoverCounter name = \"Vivaansh\"/>\n       <User name={(isLoggedIn)=>isLoggedIn ? 'Uttam' : 'Guest'}/>\n      <CounterComponent render={(count,incementClickHandler) => (<ClickCounter2 count={count} incementClickHandler ={incementClickHandler}/>)}/>\n      <CounterComponent render={(count,incementClickHandler) => (<HoverCounter2 count={count} incementClickHandler ={incementClickHandler}/>)}/>\n\n       <UserProvider value=\"Uttam\"> \n       <UserC/> \n       </UserProvider>\n\n       <GetList/>\n       <PostFormList/>\n       <ClassCounter/>\n       <HookCounter/>\n       <HookCounterThree/>\n      \n         </div>\n    );\n  }\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}